# -*- coding: utf-8 -*-
"""iphonesales.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IKjpxPlSEDGJPtwGf-aahfqTl92pAjAZ
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

Order_Details = pd.read_csv(r'/content/Order_details-masked.csv')
Order_Details.head() # Changed df to Order_Details

Order_Details['Time'] = pd.to_datetime(Order_Details['Transaction Date'])


Order_Details['Hour'] = (Order_Details['Time']).dt.hour

timemost1 = Order_Details['Hour'].value_counts().index.tolist()[:24]

timemost2 = Order_Details['Hour'].value_counts().values.tolist()[:24]

tmost = np.column_stack((timemost1,timemost2))

print(" Hour Of Day" + "\t" + "Cumulative Number of Purchases \n")
print('\n'.join('\t\t'.join(map(str, row)) for row in tmost))

timemost = Order_Details['Hour'].value_counts()
timemost1 = []

for i in range(0,23):
    timemost1.append(i)

timemost2 = timemost.sort_index()
timemost2.tolist()
timemost2 = pd.DataFrame(timemost2)

plt.figure(figsize=(20, 10))

plt.title('Sales Happening Per Hour (Spread Throughout The Week)',
          fontdict={'fontname': 'monospace', 'fontsize': 30}, y=1.05)

plt.ylabel("Number Of Purchases Made", fontsize=18, labelpad=20)
plt.xlabel("Hour", fontsize=18, labelpad=20)
plt.plot(timemost1, timemost2, color='m')
plt.grid()
plt.show()

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_excel(r"/content/Online_Retail_Dataset.xlsx")


print(df.head())


print(df.info())

print(df.isnull().sum())

df = df.dropna(subset=['CustomerID'])

print("\nUnique countries:", df['Country'].nunique())
print("\nTop 5 countries:\n", df['Country'].value_counts().head())


df['TotalPrice'] = df['Quantity'] * df['UnitPrice']

# Top-selling products
top_products = df.groupby('Description').agg({'Quantity':'sum'}).sort_values('Quantity', ascending=False).head(10)
print("\nTop 10 Products by Quantity:\n", top_products)

# Plotting Top 10 Products
plt.figure(figsize=(12,6))
sns.barplot(x=top_products.Quantity, y=top_products.index, palette="viridis")
plt.title('Top 10 Selling Products')
plt.xlabel('Total Quantity Sold')
plt.ylabel('Product Description')
plt.tight_layout()
plt.show()


revenue_country = df.groupby('Country').agg({'TotalPrice':'sum'}).sort_values('TotalPrice', ascending=False)


plt.figure(figsize=(12,6))
sns.barplot(x=revenue_country.TotalPrice.head(10), y=revenue_country.head(10).index, palette="magma")
plt.title('Top 10 Countries by Revenue')
plt.xlabel('Total Revenue')
plt.ylabel('Country')
plt.tight_layout()
plt.show()


df['InvoiceDate'] = pd.to_datetime(df['InvoiceDate'])
df['Month'] = df['InvoiceDate'].dt.to_period('M')
monthly_sales = df.groupby('Month').agg({'TotalPrice':'sum'})

plt.figure(figsize=(14,6))
monthly_sales.plot(kind='line', legend=False)
plt.title('Monthly Sales Trend')
plt.xlabel('Month')
plt.ylabel('Revenue')
plt.grid()
plt.show()

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler


plt.figure(figsize=(10,8))
sns.heatmap(df[['Quantity', 'UnitPrice', 'TotalPrice']].corr(), annot=True, cmap='coolwarm')
plt.title('Feature Correlation Heatmap')
plt.show()


customer_data = df.groupby('CustomerID').agg({'TotalPrice':'sum', 'InvoiceNo':'nunique'}).rename(columns={'InvoiceNo':'NumTransactions'})
scaler = StandardScaler()
scaled_data = scaler.fit_transform(customer_data)


inertia = []
for k in range(1, 11):
    kmeans = KMeans(n_clusters=k, random_state=42)
    kmeans.fit(scaled_data)
    inertia.append(kmeans.inertia_)

plt.figure(figsize=(10,5))
plt.plot(range(1,11), inertia, marker='o')
plt.title('Elbow Method For Optimal k')
plt.xlabel('Number of Clusters')
plt.ylabel('Inertia')
plt.grid()
plt.show()


kmeans = KMeans(n_clusters=3, random_state=42)
customer_data['Cluster'] = kmeans.fit_predict(scaled_data)


plt.figure(figsize=(10,6))
sns.scatterplot(data=customer_data, x='TotalPrice', y='NumTransactions', hue='Cluster', palette='Set1', s=100)
plt.title('Customer Segmentation')
plt.xlabel('Total Purchase Value')
plt.ylabel('Number of Transactions')
plt.legend()
plt.grid()
plt.show()


print("\nCluster Summary:\n", customer_data.groupby('Cluster').mean())

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns


df = pd.read_excel(r'/content/Online_Retail_Dataset.xlsx')


df = df.dropna(subset=['CustomerID'])


df['InvoiceDate'] = pd.to_datetime(df['InvoiceDate'])
df['TotalPrice'] = df['Quantity'] * df['UnitPrice']
df['Month'] = df['InvoiceDate'].dt.to_period('M')


sns.set(style='whitegrid')
plt.rcParams.update({'figure.figsize': (10, 6)})


top_products = df.groupby('Description')['Quantity'].sum().sort_values(ascending=False).head(10)
plt.figure()
sns.barplot(x=top_products.values, y=top_products.index, palette='viridis')
plt.title('Top 10 Selling Products')
plt.xlabel('Total Quantity Sold')
plt.ylabel('Product Description')
plt.tight_layout()
plt.savefig("top_10_products.png")
plt.show()


revenue_country = df.groupby('Country')['TotalPrice'].sum().sort_values(ascending=False).head(10)
plt.figure()
sns.barplot(x=revenue_country.values, y=revenue_country.index, palette='magma')
plt.title('Top 10 Countries by Revenue')
plt.xlabel('Total Revenue')
plt.ylabel('Country')
plt.tight_layout()
plt.savefig("top_countries_revenue.png")
plt.show()

# Monthly Sales Trend
monthly_sales = df.groupby('Month')['TotalPrice'].sum()
plt.figure()
monthly_sales.plot(kind='line', marker='o')
plt.title('Monthly Sales Trend')
plt.xlabel('Month')
plt.ylabel('Revenue')
plt.grid(True)
plt.tight_layout()
plt.savefig("monthly_sales_trend.png")
plt.show()

# Correlation Heatmap
plt.figure()
sns.heatmap(df[['Quantity', 'UnitPrice', 'TotalPrice']].corr(), annot=True, cmap='coolwarm')
plt.title('Feature Correlation Heatmap')
plt.tight_layout()
plt.savefig("correlation_heatmap.png")
plt.show()